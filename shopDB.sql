CREATE SCHEMA shopDB;

CREATE TABLE SUPPLIER(
SupplierID INT(4) NOT NULL,
Type VARCHAR(20) NOT NULL,
Name VARCHAR(25) NOT NULL,
Address VARCHAR(50),
CName VARCHAR(20),
Phone VARCHAR(12),
PRIMARY KEY(SupplierID));

CREATE TABLE INTERNATIONAL(
SupplierID INT(4) NOT NULL,
ImportTax DOUBLE(2,2),
PRIMARY KEY(SupplierID),
FOREIGN KEY(SupplierID) REFERENCES SUPPLIER(SupplierID) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT nonNegativeTax CHECK(ImportTax>=0));

CREATE TABLE TOOL(
ToolID INT(4) NOT NULL,
Type VARCHAR(20) NOT NULL,
Name VARCHAR(20) NOT NULL,
Quantity INT,
Price DOUBLE(6,2),
SupplierID INT(4) NOT NULL,
PRIMARY KEY(ToolID),
FOREIGN KEY(SupplierID) REFERENCES SUPPLIER(SupplierID) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT nonNegativeQuantity CHECK(Quantity>=0),
CONSTRAINT nonNegativePrice CHECK(Price>=0));

CREATE TABLE ELECTRICAL(
ToolID INT(4) NOT NULL,
PowerType CHAR(2) NOT NULL, #CHAR(2)bc AC or DC Power
PRIMARY KEY(ToolID),
FOREIGN KEY(ToolID) REFERENCES TOOL(ToolID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE ORDERS(
OrderID INT(5) NOT NULL,
Date DATE,
PRIMARY KEY(OrderID));

CREATE TABLE ORDERLINE(
OrderID INT(5) NOT NULL,
ToolID INT(4) NOT NULL,
SupplierID INT(4) NOT NULL,
Quantity INT,
PRIMARY KEY(OrderId,ToolID),
FOREIGN KEY(OrderID) REFERENCES ORDERS(OrderID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(ToolID) REFERENCES TOOL(ToolID) ON DELETE CASCADE ON UPDATE CASCADE, 
FOREIGN KEY(SupplierID) REFERENCES SUPPLIER(SupplierID) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT nonNegativeQuantity CHECK(Quantity>=0));

CREATE TABLE CLIENT(
ClientID INT(4) NOT NULL,
FName VARCHAR(20) NOT NULL,
LName VARCHAR(20) NOT NULL,
Address VARCHAR(50),
PostalCode VARCHAR(7),
PhoneNum VARCHAR(12),
Type CHAR(1),
PRIMARY KEY(ClientID));

CREATE TABLE PURCHASES(
ClientID INT(4) NOT NULL,
ToolID INT(4) NOT NULL,
Date DATE,
PRIMARY KEY(ClientID,ToolID,Date),
FOREIGN KEY(ClientID) REFERENCES CLIENT(ClientID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(ToolID) REFERENCES TOOL(ToolID) ON DELETE CASCADE ON UPDATE CASCADE);
